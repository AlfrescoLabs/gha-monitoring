openapi: "3.0.0"
info:
  description: "A reactive badge generator for GitHub Actions workflows"
  version: "1.0.0"
  title: "GitHub Action Badge Generator"
  contact:
    name: "Domenico Sibilio"
    email: "domenicosibilio@gmail.com"
tags:
  - name: Badges API
paths:
  /badges/{message}:
    get:
      summary: "Generate a static badge"
      operationId: "getBadge"
      parameters:
        - in: path
          name: message
          required: true
          schema:
            type: string
            minLength: 1
        - in: query
          name: label
          schema:
            type: string
        - in: query
          name: messageColor
          schema:
            $ref: "#/components/schemas/NamedColor"
        - in: query
          name: labelColor
          schema:
            $ref: "#/components/schemas/NamedColor"
        - in: query
          name: logo
          schema:
            type: string
      responses:
        200:
          description: "The request has been accepted"
          content:
            image/svg+xml:
              schema:
                type: string
                format: binary
        400:
          description: "Message validation exception"
        500:
          description: "Internal server error"
      tags:
        - Badges API
  /badges/github/{owner}/{repository}/{workflowId}:
    get:
      summary: "Generate a dynamic GitHub Action workflow badge"
      operationId: "getGitHubWorkflowBadge"
      parameters:
        - in: path
          name: owner
          required: true
          schema:
            type: string
            minLength: 1
        - in: path
          name: repository
          required: true
          schema:
            type: string
            minLength: 1
        - in: path
          name: workflowId
          required: true
          schema:
            type: string
            minLength: 1
        - in: query
          name: branch
          schema:
            type: string
            default: 'master'
        - in: query
          name: label
          schema:
            type: string
      responses:
        200:
          description: "The request has been accepted"
          content:
            image/svg+xml:
              schema:
                type: string
                format: binary
        400:
          description: "Message validation exception"
        500:
          description: "Internal server error"
      tags:
        - Badges API
  /badges/prstatus/{owner}/{repository}:
    get:
      summary: "Generate a dynamic GitHub Pull request badge"
      operationId: "getPrStatus"
      parameters:
        - in: path
          name: owner
          required: true
          schema:
            type: string
            minLength: 1
        - in: path
          name: repository
          required: true
          schema:
            type: string
            minLength: 1
        - in: query
          name: pattern
          required: true
          schema:
            type: string
            minLength: 1
        - in: query
          name: user
          schema:
            type: string
        - in: query
          name: field
          schema:
            $ref: "#/components/schemas/PrField"
      responses:
        200:
          description: "The request has been accepted"
          content:
            image/svg+xml:
              schema:
                type: string
                format: binary
        400:
          description: "Message validation exception"
        500:
          description: "Internal server error"
      tags:
        - Badges API
  /badges/prurl/{owner}/{repository}:
    get:
      summary: "Redirect to a selected PR"
      operationId: "getPrRedirectUrl"
      parameters:
        - in: path
          name: owner
          required: true
          schema:
            type: string
            minLength: 1
        - in: path
          name: repository
          required: true
          schema:
            type: string
            minLength: 1
        - in: query
          name: pattern
          required: true
          schema:
            type: string
            minLength: 1
        - in: query
          name: user
          schema:
            type: string
      responses:
        302:
          description: "Redirect to Pull request URL"
        400:
          description: "Message validation exception"
        500:
          description: "Internal server error"
      tags:
        - Badges API

components:
  schemas:
    NamedColor:
      type: string
      enum: [ BRIGHTGREEN, GREEN, YELLOW, YELLOWGREEN, ORANGE, RED, BLUE, GREY, LIGHTGREY ]
    PrField:
      type: string
      enum: [ TITLE, DESCRIPTION ]